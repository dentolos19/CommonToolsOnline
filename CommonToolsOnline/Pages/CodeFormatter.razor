@page "/codeformatter"

@using System.Text.Json
@using System.Xml
@using System.Xml.Linq
@using System.Text

<h3>Code Formatter</h3>

<EditForm Model="@_form" OnValidSubmit="@FormatCode">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <InputSelect class="form-control" @bind-Value="@_form.Language">
            <option value="JSON">JSON</option>
            <option value="XML">XML</option>
        </InputSelect>
    </div>
    <div class="form-group">
        <InputTextArea class="form-control" @bind-Value="_form.Code"/>
    </div>
    <button class="form-control" type="submit">Format Code</button>
</EditForm>

@code {

    private CodeFormatterForm _form;

    protected override void OnInitialized()
    {
        _form = new CodeFormatterForm();
    }

    private void FormatCode()
    {
        switch (_form.Language.ToLower())
        {
            case "json":
                FormatJson();
                break;
            case "xml":
                FormatXml();
                break;
        }
    }

    private void FormatJson()
    {
        var element = JsonSerializer.Deserialize<JsonElement>(_form.Code);
        _form.Code = JsonSerializer.Serialize(element, new JsonSerializerOptions { WriteIndented = true });
    }

    private void FormatXml()
    {
        var builder = new StringBuilder();
        var element = XElement.Parse(_form.Code);
        var settings = new XmlWriterSettings();
        settings.OmitXmlDeclaration = true;
        settings.Indent = true;
        settings.NewLineOnAttributes = true;
        using (var writer = XmlWriter.Create(builder, settings))
            element.Save(writer);
        _form.Code = builder.ToString();
    }

}
