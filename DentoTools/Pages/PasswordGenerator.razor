@page "/password-generator"

<h3>Password Generator</h3>

<SfTextBox Readonly="true" @bind-Value="OutputPassword"/>

<br/>
<br/>

<label>Password Length</label>
<SfNumericTextBox @bind-Value="PasswordLength"/>

<br/>
<br/>

<SfCheckBox Label="Use Uppercase Characters" @bind-Checked="UseUppercaseCharacters"/>
<br/>
<SfCheckBox Label="Use Lowercase Characters" @bind-Checked="UseLowercaseCharacters"/>
<br/>
<SfCheckBox Label="Use Numerical Characters" @bind-Checked="UseNumericalCharacters"/>
<br/>
<SfCheckBox Label="Use Custom Characters" @bind-Checked="UseCustomCharacters"/>
<br/>
<SfTextBox @bind-Value="CustomCharacters"/>

<br/>
<br/>

<SfButton IsPrimary="true" @onclick="GeneratePassword">Generate Password</SfButton>

@code
{

    private string OutputPassword { get; set; }
    private string CustomCharacters { get; set; } = "!@#$%&";
    private int PasswordLength { get; set; } = 16;

    private bool UseUppercaseCharacters { get; set; } = true;
    private bool UseLowercaseCharacters { get; set; } = true;
    private bool UseNumericalCharacters { get; set; } = true;
    private bool UseCustomCharacters { get; set; } = false;

    protected override void OnInitialized()
    {
        GeneratePassword();
    }

    private void GeneratePassword()
    {
        var random = new Random();
        var characters = default(string);
        if (UseUppercaseCharacters)
            characters += "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        if (UseLowercaseCharacters)
            characters += "abcdefghijklmnopqrstuvwxyz";
        if (UseNumericalCharacters)
            characters += "0123456789";
        if (UseCustomCharacters)
            characters += CustomCharacters;
        OutputPassword = string.IsNullOrWhiteSpace(characters) ? string.Empty : new string(Enumerable.Repeat(characters, PasswordLength).Select(index => index[random.Next(index.Length)]).ToArray());
    }

}