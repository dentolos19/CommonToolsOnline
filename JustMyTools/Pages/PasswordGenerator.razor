@page "/passwordgenerator"

@inject IJSRuntime JsRuntime

<h3>Password Generator</h3>

<div class="form-group">
    <div class="form-inline">
        <input class="form-control" readonly value="@_password"/>
        <button class="btn btn-primary" @onclick="CopyPassword">Copy</button>
    </div>
</div>

<EditForm Model="@_form" OnValidSubmit="@GeneratePassword">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        Password Length
        <InputNumber class="form-control" TValue="int" @bind-Value="_form.PasswordLength"/>
    </div>
    <div>
        <label>
            <InputCheckbox @bind-Value="_form.UseUppercaseAlphabets"/>
            Use Uppercase Alphabets
        </label>
    </div>
    <div>
        <label>
            <InputCheckbox @bind-Value="_form.UseLowercaseAlphabets"/>
            Use Lowercase Alphabets
        </label>
    </div>
    <div>
        <label>
            <InputCheckbox @bind-Value="_form.UseNumberCharacters"/>
            Use Number Characters
        </label>
    </div>
    <div>
        <label>
            <InputCheckbox @bind-Value="_form.UseCustomCharacters"/>
            Use Custom Characters
        </label>
    </div>
    <div class="form-group">
        <label>Custom Characters</label>
        <InputText class="form-control" @bind-Value="_form.CustomCharacters"/>
    </div>
    <button class="form-control" type="submit">Generate Password</button>
</EditForm>

@code {

    private string _password;
    private PasswordGeneratorForm _form;

    protected override void OnInitialized()
    {
        _form = new PasswordGeneratorForm();
        GeneratePassword();
    }

    private void GeneratePassword()
    {
        var random = new Random();
        var characters = default(string);
        if (_form.UseUppercaseAlphabets)
            characters += "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        if (_form.UseLowercaseAlphabets)
            characters += "abcdefghijklmnopqrstuvwxyz";
        if (_form.UseNumberCharacters)
            characters += "1234567890";
        if (_form.UseCustomCharacters)
            characters += _form.CustomCharacters;
        _password = string.IsNullOrWhiteSpace(characters) ? "dud select a option bruh" : new string(Enumerable.Repeat(characters, _form.PasswordLength).Select(index => index[random.Next(index.Length)]).ToArray());
    }

    private async void CopyPassword()
    {
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", _password);
    }

}